name: Run Robot Framework Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  # -------------------------
  # 1️⃣ Testes independentes (unit/api)
  # -------------------------
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout test repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install robotframework-seleniumlibrary selenium requests urllib3

      - name: Ensure logs directory exists
        run: mkdir -p logs

      - name: Run unit/API tests
        run: |
          robot -d logs tests/unit/

      - name: Upload unit test results
        uses: actions/upload-artifact@v4
        with:
          name: robot-unit-test-results
          path: logs/

  # -------------------------
  # 2️⃣ Testes e2e Web (dependem da aplicação)
  # -------------------------
  e2e-tests:
    runs-on: ubuntu-latest
    needs: unit-tests  # roda após o job unit-tests
    steps:
      # Checkout repositórios
      - name: Checkout test repo
        uses: actions/checkout@v3

      - name: Checkout app repo
        uses: actions/checkout@v3
        with:
          repository: Zambom2021/temple-of-rock
          token: ${{ secrets.TEMPLE_TOKEN }}
          path: app

      # Docker Buildx e subir containers
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Start app with Docker Compose
        run: |
          cd app
          docker compose up -d --build
          # Espera até a aplicação responder
          for i in {1..20}; do
            curl -s http://localhost:9090/health && break || sleep 3
          done

      # Python + dependências
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Python dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install robotframework-seleniumlibrary selenium requests urllib3

      # Chrome e ChromeDriver headless
      - name: Setup Chrome and ChromeDriver
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip wget xvfb
          wget -q -O google-chrome.deb https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo apt install -y ./google-chrome.deb
          CHROME_VERSION=$(google-chrome --version | cut -d ' ' -f 3 | cut -d '.' -f 1)
          wget -q "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$CHROME_VERSION" -O chromedriver_version
          CHROMEDRIVER_VERSION=$(cat chromedriver_version)
          wget -q "https://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip"
          unzip chromedriver_linux64.zip
          sudo mv chromedriver /usr/local/bin/
          sudo chmod +x /usr/local/bin/

      - name: Ensure logs directory exists
        run: mkdir -p logs

      # Rodar testes Robot Framework Web
      - name: Run Robot Framework Web tests
        run: |
          export ROBOT_OPTIONS="--variable BROWSER:Chrome --variable OPTIONS:--headless --variable OPTIONS2:--no-sandbox --variable OPTIONS3:--disable-dev-shm-usage"
          robot -d logs tests/e2e/

      # Upload resultados
      - name: Upload e2e test results
        uses: actions/upload-artifact@v4
        with:
          name: robot-e2e-test-results
          path: logs/

      # Docker Compose down
      - name: Docker Compose down
        if: always()
        run: |
          cd app
          docker compose down -v
