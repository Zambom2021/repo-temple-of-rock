name: Run Robot Framework Tests

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

env:
  MONGODB_URI: ${{ secrets.MONGODB_URI }}

jobs:
  run-tests:
    runs-on: ubuntu-latest
    steps:
      # -------------------------
      # Checkout repositórios
      # -------------------------
      - name: Checkout test repo
        uses: actions/checkout@v3

      - name: Checkout app repo
        uses: actions/checkout@v3
        with:
          repository: Zambom2021/temple-of-rock
          token: ${{ secrets.TEMPLE_TOKEN }}
          path: app

      # -------------------------
      # Docker Buildx
      # -------------------------
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # -------------------------
      # Subir container da aplicação com variável de ambiente
      # -------------------------
      - name: Start app with Docker Compose
        run: |
          cd app
          docker compose up -d --build
          echo "Waiting for app to be ready..."
          for i in {1..30}; do
            curl -s http://localhost:9090/health && break
            echo "Waiting 3s..."
            sleep 3
          done

      # -------------------------
      # Debug MongoDB connection
      # -------------------------
      - name: Check MongoDB connection
        run: |
          docker compose exec app sh -c "echo \$MONGODB_URI"
          docker compose exec app sh -c "node -e \"require('mongoose').connect(process.env.MONGODB_URI).then(() => console.log('Mongo connected')).catch(console.error)\""

      # -------------------------
      # Python + dependências
      # -------------------------
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install robotframework-seleniumlibrary selenium requests urllib3

      # -------------------------
      # Chrome e ChromeDriver
      # -------------------------
      - name: Setup Chrome and ChromeDriver
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip wget xvfb
          wget -q -O google-chrome.deb https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo apt install -y ./google-chrome.deb
          CHROME_VERSION=$(google-chrome --version | cut -d ' ' -f 3 | cut -d '.' -f 1)
          wget -q "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$CHROME_VERSION" -O chromedriver_version
          CHROMEDRIVER_VERSION=$(cat chromedriver_version)
          wget -q "https://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip"
          unzip chromedriver_linux64.zip
          sudo mv chromedriver /usr/local/bin/
          sudo chmod +x /usr/local/bin/

      # -------------------------
      # Rodar testes API
      # -------------------------
      - name: Run API tests
        run: |
          python -m robot -d logs tests/api/

      # -------------------------
      # Rodar testes Web
      # -------------------------
      - name: Run Web tests
        run: |
          export ROBOT_OPTIONS="--variable BROWSER:Chrome --variable OPTIONS:--headless --variable OPTIONS2:--no-sandbox"
          python -m robot -d logs tests/web/

      # -------------------------
      # Upload resultados
      # -------------------------
      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: robot-test-results
          path: logs/

      # -------------------------
      # Docker Compose down
      # -------------------------
      - name: Docker Compose down
        if: always()
        run: |
          cd app
          docker compose down -v
