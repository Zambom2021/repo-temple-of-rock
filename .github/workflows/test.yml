name: Run Robot Framework Tests

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

jobs:
  run-tests:
    runs-on: ubuntu-latest
    steps:
      # -------------------------
      # Checkout repositórios
      # -------------------------
      - name: Checkout test repo
        uses: actions/checkout@v3

      - name: Checkout app repo
        uses: actions/checkout@v3
        with:
          repository: Zambom2021/temple-of-rock
          token: ${{ secrets.TEMPLE_TOKEN }}
          path: app

      # -------------------------
      # Docker Buildx
      # -------------------------
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # -------------------------
      # Subir containers da aplicação
      # -------------------------
      - name: Start app with Docker Compose
        run: |
          cd app
          docker compose up -d --build
          echo "Waiting for backend to be ready..."
          for i in {1..30}; do
            curl -s http://localhost:9090/health && break
            echo "Waiting 3s..."
            sleep 3
          done

      # -------------------------
      # Python + dependências
      # -------------------------
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install robotframework-seleniumlibrary selenium requests urllib3

      # Setup ChromeDriver compatível
      # -------------------------
      - name: Setup ChromeDriver
        run: |
          # Atualiza pacotes e ferramentas
          sudo apt-get update || true
          sudo apt-get install -y unzip wget xvfb jq || true

          # Remove drivers antigos
          sudo rm -f /usr/local/bin/chromedriver

          # Captura a versão completa do Chrome instalado
          CHROME_VERSION=$(google-chrome --version | grep -oP "\d+\.\d+\.\d+\.\d+")
          CHROME_MAJOR=$(echo "$CHROME_VERSION" | cut -d '.' -f 1)
          echo "Chrome detectado: $CHROME_VERSION"

          # Obtém o ChromeDriver compatível com essa versão
          DRIVER_VERSION=$(curl -s https://googlechromelabs.github.io/chrome-for-testing/known-good-versions-with-downloads.json \
            | jq -r --arg ver "$CHROME_MAJOR" '.versions[] | select(.version | startswith($ver+".")) | .version' \
            | sort -r | head -n 1)
          echo "Instalando ChromeDriver versão: $DRIVER_VERSION"

          # Baixa e instala o driver compatível
          wget -q "https://storage.googleapis.com/chrome-for-testing-public/${DRIVER_VERSION}/linux64/chromedriver-linux64.zip"
          unzip -o chromedriver-linux64.zip
          sudo mv chromedriver-linux64/chromedriver /usr/local/bin/
          sudo chmod +x /usr/local/bin/chromedriver

          # Confirma versões
          google-chrome --version
          chromedriver --version

      # -------------------------
      # Rodar testes
      # -------------------------
      - name: Run tests
        run: python -m robot -d logs tests/
        continue-on-error: true   # garante que o job continue mesmo se houver falhas

      # -------------------------
      # Upload resultados
      # -------------------------
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: robot-test-results
          path: logs/

      # -------------------------
      # Docker Compose down
      # -------------------------
      - name: Docker Compose down
        if: always()
        run: |
          cd app
          docker compose down -v
